node {

  echo "git branch name: ${env.BRANCH_NAME}"
  echo "build number is: ${env.BUILD_NUMBER}"
  echo "node name is: ${env.NODE_NAME}"

  def mavenHome = tool name: 'maven3.9.9'

  try {

    stage('Git Checkout') {
      notifyBuild('STARTED')
      git 'https://github.com/khdevopsb5onlile/Maven-web-app-project.git'
    }

    stage('Compile') {
      sh "${mavenHome}/bin/mvn clean compile"
    }

    stage('Build') {
      sh "${mavenHome}/bin/mvn clean package"
    }

    stage('SonarQube Report') {
      sh "${mavenHome}/bin/mvn sonar:sonar"
    }

    stage('Upload Artifact') {
      sh "${mavenHome}/bin/mvn deploy"
    }

    stage('Deploy to Tomcat') {
      sh """
        curl -u mahesh:password \
        --upload-file target/maven-web-application.war \
        "http://13.235.82.88:8080/manager/text/deploy?path=/maven-web-application&update=true"
      """
    }

    currentBuild.result = 'SUCCESS'

  } catch (e) {
    currentBuild.result = 'FAILURE'
    echo "Build failed: ${e}"
    throw e  // Re-throw to ensure Jenkins marks the build as failed
  } finally {
    notifyBuild(currentBuild.result)
  }

}

// Notification Function
def notifyBuild(String buildStatus = 'STARTED') {

  buildStatus = buildStatus ?: 'SUCCESS'

  def colorCode = '#FF0000'  // Default RED
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  if (buildStatus == 'STARTED') {
    colorCode = '#FFFF00' // Yellow
  } else if (buildStatus == 'SUCCESS') {
    colorCode = '#00FF00' // Green
  }

  slackSend (color: colorCode, message: summary, channel: '#jio-devteam')
  slackSend (color: colorCode, message: summary, channel: '#jio-devops')
}
